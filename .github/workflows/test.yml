name: Unit tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre:
    name: 'Test <Redis, Python, redis-py, aioredis, lupa, cov>'
    runs-on: ubuntu-latest
    steps:
      - run: echo ''
  test:
    name: 'Test <${{ matrix.redis-version }}, ${{ matrix.python-version }}, ${{ matrix.redis-py }}, ${{ matrix.aioredis }}, ${{ matrix.lupa }}, ${{ matrix.coverage }}>'
    runs-on: ubuntu-latest
    needs: pre
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        redis-version: [ "6.2.6", "7.0.5" ]
        python-version: [ "3.7", "3.8", "3.10", '3.11' ]
        redis-py: [ "4.1.2", "4.3.4" ]
        include:
          - python-version: "3.10"
            redis-version: "6.2.6"
            redis-py: "2.10.6"
            aioredis: "1.3.1"
          - python-version: "3.10"
            redis-version: "6.2.6"
            redis-py: "3.5.3"
            aioredis: "1.3.1"
          - python-version: "3.10"
            redis-version: "6.2.6"
            redis-py: "4.0.1"
            aioredis: "1.3.1"
          - python-version: "3.10"
            redis-version: "6.2.6"
            redis-py: "4.1.2"
            aioredis: "2.0.1"
          - python-version: "3.10" # should work fine with redis.asyncio
            redis-version: "7.0.5"
            redis-py: "4.3.4"
            lupa: "1.13"
            coverage: yes
    services:
      redis:
        image: redis:${{ matrix.redis-version }}
        ports:
          - 6379:6379
    outputs:
      version: ${{ steps.getVersion.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          cache-dependency-path: poetry.lock
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip --quiet install poetry
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
          poetry install
          poetry run pip install redis==${{ matrix.redis-py }}
      - name: Install aioredis
        if: ${{ matrix.aioredis }}
        run: |
          poetry run pip install aioredis==${{ matrix.aioredis }}
      - name: Install lupa
        if: ${{ matrix.lupa }}
        run: |
          poetry run pip install lupa==${{ matrix.lupa }}
      - name: Get version
        id: getVersion
        shell: bash
        run: |
          VERSION=$(poetry version -s --no-ansi -n)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      - name: Test import
        run: |
          poetry build
          pip install dist/fakeredis-*.tar.gz
          python -c 'import fakeredis'
      - name: Test without coverage
        if: ${{ matrix.coverage != 'yes' }}
        run: |
          poetry run pytest -v
      - name: Test with coverage
        if: ${{ matrix.coverage == 'yes' }}
        uses: ./.github/actions/test-coverage
        with:
          github-secret: ${{ secrets.GITHUB_TOKEN }}
          gist-secret: ${{ secrets.GIST_SECRET }}
  # Prepare a draft release for GitHub Releases page for the manual verification
  # If accepted and published, release workflow would be triggered
  update_release_draft:
    permissions:
      # write permission is required to create a github release
      contents: write
      # write permission is required for autolabeler
      # otherwise, read permission is required at least
      pull-requests: write
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}