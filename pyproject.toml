[build-system]
requires = ["poetry_core"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "fakeredis"
packages = [
    { include = "fakeredis" },
]
version = "1.10.0"
description = "Fake implementation of redis API for testing purposes."
readme = "README.md"
keywords = ["redis", "rq", "django-rq", "rq-scheduler"]
authors = [
    "James Saryerwinnie <js@jamesls.com>",
    "Bruce Merry <bmerry@ska.ac.za>",
    "Daniel Moran <daniel.maruani@gmail.com>"
]
maintainers = [
    "Daniel Moran <daniel.maruani@gmail.com>"
]
license = "BSD-3-Clause"
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Development Status :: 6 - Mature',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: BSD License',
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Topic :: Software Development :: Libraries :: Python Modules',
]
homepage = "https://github.com/cunla/fakeredis-py"
repository = "https://github.com/cunla/fakeredis-py"

[tool.poetry.dependencies]
python = "^3.7"
redis = "<4.4"
sortedcontainers = "^2.4.0"
lupa = { version = "^1.13", optional = true }
aioredis = { version = "^2.0.1", optional = true }

[tool.poetry.extras]
lua = ["lupa"]
aioredis = ["aioredis"]

[tool.poetry.dev-dependencies]
invoke = "^1.7.1"
wheel = "*"
hypothesis = "^6.47.4"
tox = "^3.25.0"
twine = "4.0.1"
coverage = "^6.3"
pytest = "^7.1.2"
pytest-asyncio = "^0.20"
pytest-cov = "^4.0.0"
pytest-describe = "^2"
pytest-mock = "^3.7.0"
pytest-order = "^1"
flake8 = "^5.0.4"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/cunla/fakeredis-py/issues"

[tool.pytest.ini_options]
asyncio_mode="strict"
minversion = "7.1"
addopts = '''
--order-scope=session
--disable-pytest-warnings
--strict-markers
--cov
--cov-config=pyproject.toml
--cov-report xml:coverage.xml
--no-cov-on-fail
--junitxml=junit.xml
-r
fEsxp
'''
cache_dir = "./.cache"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "fake: run tests only with fake redis",
    "real: run tests with a locally running real Redis server",
    "disconnected",
    "min_server",
    "max_server",
    "decode_responses",
    "descriptor",
    "description",
]
python_classes = [
    "Test*",
    "Describe*",
]
python_functions = [
    "test_*",
    "describe_*",
]